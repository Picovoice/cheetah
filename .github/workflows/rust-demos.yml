name: Rust Demos

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - '.github/workflows/rust-demos.yml'
      - 'demo/rust/**'
      - '!demo/rust/README.md'
  pull_request:
    branches: [master]
    paths:
      - '.github/workflows/rust-demos.yml'
      - 'demo/rust/**'
      - '!demo/rust/README.md'

defaults:
  run:
    working-directory: demo/rust

jobs:
  build-github-hosted:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Rust dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libasound2-dev -y

    - name: Rust build micdemo
      run: cargo build --verbose
      working-directory: demo/rust/micdemo

    - name: Rust build filedemo
      run: cargo build --verbose
      working-directory: demo/rust/filedemo

    - name: Test
      run: cargo run --release -- --access_key ${{secrets.PV_VALID_ACCESS_KEY}} --audio_paths ../../../resources/audio_samples/test.wav
      working-directory: demo/rust/filedemo

  build-self-hosted:
    runs-on: ${{ matrix.machine }}

    strategy:
      matrix:
        machine: [rpi3-32, rpi3-64, rpi4-32, rpi4-64, jetson]

    steps:
    - uses: actions/checkout@v2

    - name: Rust dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libasound2-dev -y

    - name: Rust build micdemo
      run: cargo build --verbose
      working-directory: demo/rust/micdemo

    - name: Rust build filedemo
      run: cargo build --verbose
      working-directory: demo/rust/filedemo

    - name: Test
      run: cargo run --release -- --access_key ${{secrets.PV_VALID_ACCESS_KEY}} --audio_paths ../../../resources/audio_samples/test.wav
      working-directory: demo/rust/filedemo