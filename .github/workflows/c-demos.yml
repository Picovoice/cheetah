name: C Demos

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - '.github/workflows/c-demos.yml'
      - 'demo/c/**'
      - '!demo/c/README.md'
      - 'include/**'
      - 'lib/common/**'
      - 'lib/linux/**'
      - 'lib/jetson/**'
      - 'lib/mac/**'
      - 'lib/raspberry-pi/**'
      - 'lib/windows/**'
  pull_request:
    branches: [master]
    paths:
      - '.github/workflows/c-demos.yml'
      - 'demo/c/**'
      - '!demo/c/README.md'
      - 'include/**'
      - 'lib/common/**'
      - 'lib/linux/**'
      - 'lib/jetson/**'
      - 'lib/mac/**'
      - 'lib/raspberry-pi/**'
      - 'lib/windows/**'

defaults:
  run:
    working-directory: demo/c

jobs:
  build-micdemo-github-hosted:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create build directory
      run: cmake -B ./build

    - name: Build micdemo
      run: cmake --build ./build --target cheetah_demo_mic
  
  build-micdemo-self-hosted:
    runs-on: ${{ matrix.machine }}

    strategy:
      matrix:
        machine: [rpi2, rpi3-32, rpi3-64, rpi4-32, rpi4-64, jetson, beaglebone]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create build directory
      run: cmake -B ./build

    - name: Build micdemo
      run: cmake --build ./build --target cheetah_demo_mic

  build-filedemo-github-hosted:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          platform: linux
          arch: x86_64
          ext: so
          init_performance_threshold_sec: 3.0
          proc_performance_threshold_sec: 0.8
        - os: windows-latest
          platform: windows
          arch: amd64
          ext: dll
          init_performance_threshold_sec: 3.0
          proc_performance_threshold_sec: 0.8
        - os: macos-latest
          platform: mac
          arch: x86_64
          ext: dylib
          init_performance_threshold_sec: 3.0
          proc_performance_threshold_sec: 0.8

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create build directory
      run: cmake -B ./build

    - name: Build filedemo
      run: cmake --build ./build --target cheetah_demo_file
    
    - uses: ./.github/actions/c-filedemo
      name: Run filedemo
      with:
        access_key: ${{ secrets.PV_VALID_ACCESS_KEY }}
        library_path: ../../lib/${{ matrix.platform }}/${{ matrix.arch }}/libpv_cheetah.${{ matrix.ext }}
        model_path: ../../lib/common/cheetah_params.pv
        audio_path: ../../resources/audio_samples/test.wav
        init_performance_threshold_sec: ${{ matrix.init_performance_threshold_sec }}
        proc_performance_threshold_sec: ${{ matrix.proc_performance_threshold_sec }}
  
  build-filedemo-self-hosted:
    runs-on: ${{ matrix.machine }}

    strategy:
      matrix:
        machine: [rpi3-32, rpi3-64, rpi4-32, rpi4-64, jetson]
        include:
        - machine: rpi3-32
          platform: raspberry-pi
          arch: cortex-a53
          init_performance_threshold_sec: 9.3
          proc_performance_threshold_sec: 3.2
        - machine: rpi3-64
          platform: raspberry-pi
          arch: cortex-a53-aarch64
          init_performance_threshold_sec: 15.0
          proc_performance_threshold_sec: 3.6
        - machine: rpi4-32
          platform: raspberry-pi
          arch: cortex-a72
          init_performance_threshold_sec: 8.0
          proc_performance_threshold_sec: 2.3
        - machine: rpi4-64
          platform: raspberry-pi
          arch: cortex-a72-aarch64
          init_performance_threshold_sec: 8.0
          proc_performance_threshold_sec: 2.3
        - machine: jetson
          platform: jetson
          arch: cortex-a57-aarch64
          init_performance_threshold_sec: 8.0
          proc_performance_threshold_sec: 2.3

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create build directory
      run: cmake -B ./build

    - name: Build filedemo
      run: cmake --build ./build --target cheetah_demo_file

    - uses: ./.github/actions/c-filedemo
      name: Run filedemo
      with:
        access_key: ${{ secrets.PV_VALID_ACCESS_KEY }}
        library_path: ../../lib/${{ matrix.platform }}/${{ matrix.arch }}/libpv_cheetah.so
        model_path: ../../lib/common/cheetah_params.pv
        audio_path: ../../resources/audio_samples/test.wav
        init_performance_threshold_sec: ${{ matrix.init_performance_threshold_sec }}
        proc_performance_threshold_sec: ${{ matrix.proc_performance_threshold_sec }}
